\&% For a given point A and B and a 2 circles, find the best trajectory from A to B avoiding the circles
\&% (no wall)
\&clc
\&clear all
\&r = [1;1];
\&A=[1,6];
\&B = [9,5];
\&x0 = [3 7; 5 7;6 4];
\&C = [3 6;6,6];
\&n = 10; %number of points
\&LB = [0,0;0 0 ;0 0];
\&UB = [10 10; 10 10;10 10];
\&poly= [A;x0;B];
\&figure(1);clf;hold on;
\&title ('initially');
\&xlim([0 10]); ylim([0,10]);
\&plot(poly(:,1),poly(:,2),'g--');
\&plot(poly(:,1),poly(:,2),'g*');
\&viscircles(C,r);
\&
\&
\&options = optimset('Display','iter','MaxFunEvals',300,'MaxIter',100,'TolX',1e-8,'TolFun',1e-8);
\&hobjective = @(x)objective(x, A, B);
\&hconstraints = @(x)constraints(x, A, B , C, r );
\&x = fmincon(hobjective,x0,[],[],[],[],LB,UB,hconstraints, options);
\&%x = x0;
\&a=x
\&poly= [A;a;B];
\&figure(2);clf;hold on;
\&title ('optimized');
\&xlim([0 10]); ylim([0,10]);
\&plot(poly(:,1),poly(:,2),'g--');
\&plot(poly(:,1),poly(:,2),'g*');
\&viscircles(C,r);
\&grid on
\&f = hobjective(x)
\&[g,h] = hconstraints(x)
\&
\&\m[pink]function\m[] [g,h] = constraints(x, A, B, C, r)
\&    h = [];
\&    X=[ A; x; B] ;
\&     k=0
\&    \m[pink]for\m[] i=1: size(X,1) -1
\&        \m[pink]for\m[] j = 1:size(C,1)
\&            k=k+1;
\&         g(k) = r(j) - dist(X(i,:),X(i+1,:),C(j,:),20);
\&
\&        \m[pink]end\m[]
\&    \m[pink]end\m[]
\&\m[pink]end\m[]
\&
\&\m[pink]function\m[] D = dist(A,B,C,n)
\&
\&    \m[pink]for\m[] i=0:n
\&     M=   A+(i/n)*(B-A); % M is a given point between A and B
\&        d(i+1)=norm(M-C);
\&    \m[pink]end\m[]
\&D=min(d);
\&\m[pink]end\m[]
\&
\&\m[pink]function\m[] f = objective (x,A,B)
\&X=[ A; x; B] ;
\&f=0 ;
\&    \m[pink]for\m[] i=1:size(X,1)-1
\&        f= f + norm(X(i+1,:)- X(i,:))  ;
\&    \m[pink]end\m[]
\&\m[pink]end\m[]
\&
\&clc
\&clear all
\&close all
\&
\&eps = 0.01;
\&
\&maxiter = 30;
\&
\&X0 = [-10 -5];
\&d = [0.5 1];
\&LB = [-10, -10];
\&UB = [10, 10];
\&
\&fx = @(x) X0 + x*d;
\&fX = @(X) (3*X(1) + 2*X(2) - 1)^2 + (X(1) - X(2) + 1)^2;
\&
\&aend = 15;
\&amin = 0;
\&Xmin = X0;
\&amax = aend;
\&Xmax = fx(amax);
\&
\&fprintf("Xmin %g %g \nXmax %g %g \namin = %g \namax = %g\n\n",Xmin(1),Xmin(2),Xmax(1),Xmax(2),amin,amax);
\&
\&
\&\m[pink]for\m[] i=1:maxiter
\&
\&    l0 = amax - amin;
\&    a1 = amin + (l0 - eps)/2;
\&    a2 = amin + (l0 + eps)/2;
\&
\&    X1 = Xmin + a1.*d;
\&    X2 = Xmin + a2.*d;
\&
\&    %if fx(a1) < fx(a2)
\&\m[pink]    if\m[] fX(X1) < fX(X2)
\&        amax = a2;
\&        Xmax = X2;
\&    \m[pink]else\m[]
\&        amin = a1;
\&        Xmin = X1;
\&    \m[pink]end\m[]
\&
\&    diff = amax-amin;
\&\m[pink]    if\m[](diff < 1.1*eps)
\&        break;
\&    \m[pink]end\m[]
\&
\&    %fprintf("Xmin %g %g \nXmax %g %g \namin = %g \namax = %g\nDiff = %g\n\n",Xmin(1),Xmin(2),Xmax(1),Xmax(2),amin,amax,diff);
\&
\&    Xopt = (Xmin+Xmax)/2;
\&    aopt = (amin+amax)/2;
\&    fopt = (fX(X1)+fX(X2))/2;
\&
\&\m[pink]end\m[]
\&
\&fprintf("Minimum Value = %g\nMin alpha value = %g\nX Position = (%g, %g)\nNo. of iterations = %g\nConvergence = %g\n", fopt, aopt, Xopt(1), Xopt(2), i,diff);
\&
\&
\&n = 50;
\&x_plot = linspace(LB(1),UB(1),n);
\&y_plot = linspace(LB(1),UB(1),n);
\&[X,Y] = ndgrid(x_plot,y_plot);
\&Z = zeros(n,n);
\&
\&Z = (3.*X + 2.*Y - 1).^2 + (X - Y + 1).^2;
\&
\&% Plot contour
\&figure(1);
\&contourf(X,Y,Z,10);
\&colorbar();
\&hold on;
\&plot(Xopt(1),Xopt(2),'r*');
\&
\&x_text = [Xopt(1)];
\&y_text = [Xopt(2)];
\&disptext = ['   Search Result'];
\&text(x_text,y_text,disptext,'VerticalAlignment','bottom','HorizontalAlignment','left','color','w');
\&
\&Xend = fx(aend);
\&x_plot = [ X0(1) Xend(1) ];
\&y_plot = [ X0(2) Xend(2) ];
\&plot(X0(1),X0(2),'yo');
\&plot(Xend(1),Xend(2),'yo');
\&plot(x_plot, y_plot,'-y');
\&
\&title_str = sprintf(" Starting Coordinates (%g, %g) ",X0(1),X0(2));
\&title(title_str);
\&xlabel('X1');
\&ylabel('X2');
\&set(gcf,'Position',[700 150 800 800]);
\&
\&
\&
